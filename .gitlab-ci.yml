image: buildkite/puppeteer

stages:
  - build
  - deploy

variables:
  SERVER_ADDRESS: b9labs@23.97.239.116
  TARGET_FOLDER: /var/www/html/training/

build-code:
  stage: build
  only:
    refs:
      - master
      - development
      - schedules
  tags:
    - main-runner

  before_script:
    ## Load git.b9lab.com pubkey
    - mkdir -p -m 0700 ~/.ssh/
    - touch ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    
    ## Install missing packages
    - apt-get update -y
    - apt-get -y install git

    ## Add deploy key (privkey)
    - 'which ssh-agent || ( apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_RUNNER_DEPLOY_KEY" | tr -d '\r' | ssh-add -

    # check and setup variables
    - if [ -z ${CI_CONTENT_COMMIT_HASH} ]; then export CONTENT_CHECKOUT_PARAM=$CI_CONTENT_COMMIT_HASH && export CONTENT_BUILD_TARGET_SUBFOLDER=$CI_CONTENT_COMMIT_HASH else export CONTENT_CHECKOUT_PARAM=master; fi

    # checkout content
    - 'echo content checkout: $(echo $CONTENT_CHECKOUT_PARAM)'
    - 'echo content checkout: $CONTENT_CHECKOUT_PARAM'
    
    - git submodule init
    - git submodule update
    - git -C content/ checkout $(echo $CONTENT_CHECKOUT_PARAM)

  script:
    - npm install
    - npm run build || true # workaround, first build fails
    - npm run build

  artifacts:
    paths:
      - public/


deploy-staging-server:
  stage: deploy
  environment:
    name: staging
    url: https://cdocs.westeurope.cloudapp.azure.com/training/
  only:
    refs:
      - master
      - development
      - schedules

  tags:
    - main-runner

  #when: manual

  dependencies:
    - build-code

  before_script:
    ## Import SSH Key from variable
    - mkdir -p -m 0700 ~/.ssh/
    - touch ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ## Install missing packages
    - apt-get update -y
    - apt-get install rsync -y

    ## Add deploy key (privkey)
    - 'which ssh-agent || ( apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_RUNNER_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - if [ -z ${CI_CONTENT_COMMIT_HASH} ]; then export TARGET_SUB_FOLDER=$CI_CONTENT_COMMIT_HASH else export TARGET_SUB_FOLDER=; fi

  script:
    - rsync -avh --stats --delete ./public/* ${SERVER_ADDRESS}:${TARGET_FOLDER}/$(echo $TARGET_SUB_FOLDER)
