image: buildkite/puppeteer

stages:
  - build
  - deploy

variables:
  APP_PROJECT_ID: 175
  CONTENT_PROJECT_ID: 173
  SERVER_ADDRESS: b9labs@23.97.239.116
  TARGET_FOLDER: /var/www/html/training/
  CI_BUILDBOT_TOKEN: $CI_BUILDBOT_TOKEN
  CI_MERGE_REQUEST_ID: 101

build-code:
  stage: build
  only:
    refs:
      - master
      - development
      - schedules
  tags:
    - main-runner

  before_script:
    # Setup/output vars
    - 'echo SERVER_ADDRESS: ${SERVER_ADDRESS}'
    - 'echo TARGET_FOLDER: ${TARGET_FOLDER}'
    - 'echo CI_CONTENT_COMMIT_HASH: ${CI_CONTENT_COMMIT_HASH}'

    - CONTENT_BUILD_TARGET_SUBFOLDER=${CI_CONTENT_COMMIT_HASH:=}
    - 'echo CONTENT_BUILD_TARGET_SUBFOLDER: $CONTENT_BUILD_TARGET_SUBFOLDER'

    # Load git.b9lab.com pubkey
    - mkdir -p -m 0700 ~/.ssh/
    - touch ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    
    ## Install missing packages
    - apt-get update -y
    - apt-get -y install git

    ## Add deploy key (privkey)
    - 'which ssh-agent || ( apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_RUNNER_DEPLOY_KEY" | tr -d '\r' | ssh-add -

    - git submodule init
    - git submodule update
    # checkout content commit
    - |
      if [ ! -z $CI_CONTENT_COMMIT_HASH ]; 
      then echo checkout commit $CI_CONTENT_COMMIT_HASH && git -C content/ fetch origin && git -C content/ checkout $(echo $CI_CONTENT_COMMIT_HASH) && export CONTENT_BUILD_TARGET_SUBFOLDER=$CI_CONTENT_COMMIT_HASH; 
      fi
    
    

  script:
    - npm install
    - npm run build || true # workaround, first build fails
    - npm run build

  artifacts:
    paths:
      - public/


deploy-staging-server:
  stage: deploy
  environment:
    name: staging
    url: https://cdocs.westeurope.cloudapp.azure.com/training/
  only:
    refs:
      - master
      - development
      - schedules

  tags:
    - main-runner

  #when: manual

  dependencies:
    - build-code

  before_script:
    # Setup/output vars
    - 'echo SERVER_ADDRESS: ${SERVER_ADDRESS}'
    - 'echo TARGET_FOLDER: ${TARGET_FOLDER}'
    - 'echo CI_CONTENT_COMMIT_HASH: ${CI_CONTENT_COMMIT_HASH}'

    - CONTENT_BUILD_TARGET_SUBFOLDER=${CI_CONTENT_COMMIT_HASH:=}
    - 'echo CONTENT_BUILD_TARGET_SUBFOLDER: $CONTENT_BUILD_TARGET_SUBFOLDER'


    ## Import SSH Key from variable
    - mkdir -p -m 0700 ~/.ssh/
    - touch ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ## Install missing packages
    - apt-get update -y
    - apt-get install rsync -y

    ## Add deploy key (privkey)
    - 'which ssh-agent || ( apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_RUNNER_DEPLOY_KEY" | tr -d '\r' | ssh-add -

  script:
    - 'echo Target: ${SERVER_ADDRESS}:${TARGET_FOLDER}/$CONTENT_BUILD_TARGET_SUBFOLDER'
    - rsync -avh --stats ./public/* ${SERVER_ADDRESS}:${TARGET_FOLDER}/$(echo $CONTENT_BUILD_TARGET_SUBFOLDER)

    - echo add build notification to MR
    #notify on mr
    - BUILD_URL=https://cdocs.westeurope.cloudapp.azure.com/training/$CONTENT_BUILD_TARGET_SUBFOLDER
    - MESSAGE=$(echo "Build deployed:<a href="$BUILD_URL">Corda Staging Server</a>")
    #- "CURL_CMD=$(echo '-X POST -H '\"'PRIVATE-TOKEN: $CI_BUILDBOT_TOKEN'\"' -F '\"'body=$MESSAGE'\"' https://git.b9lab.com/api/v4/projects/$CONTENT_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_ID/notes')"
    - 'curl -X POST -H "PRIVATE-TOKEN: $CI_BUILDBOT_TOKEN" -F "body=$MESSAGE" https://git.b9lab.com/api/v4/projects/$CONTENT_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_ID/notes'
    - 'echo curl cmd: $CURL_CMD'
