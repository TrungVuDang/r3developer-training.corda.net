image: node:10

stages:
  - build
  - deploy

variables:
  SERVER_ADDRESS: b9labs@23.97.239.116
  TARGET_FOLDER: /var/www/html/training/

build-code:
  stage: build
  only:
    refs:
      - master
      - development
      - schedules
  tags:
    - main-runner

  before_script:
    - sudo apt install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    ## Import SSH Key from variable
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_RUNNER_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

  script:
  - git submodule init
  - git submodule update
  - npm install
  - npm run build

  artifacts:
    paths:
      - public/


deploy-staging-server:
  stage: deploy
  environment:
    name: staging
    url: https://cdocs.westeurope.cloudapp.azure.com/training/
  only:
    refs:
      - master
      - development
      - schedules

  tags:
    - main-runner

  when: manual

  dependencies:
    - build-code

  before_script:
    ## Import SSH Key from variable
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_RUNNER_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

  script:
    - rsync -a ./* ${SERVER_ADDRESS}:${TARGET_FOLDER}
